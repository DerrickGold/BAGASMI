_start:
print "Loading background!"
outc '10
ldbg #0, "zelda-map"
print "Background loaded!"
outc '10
jump ^DRAW_SCENE, #1
^RENDER_LOOP getkey $r15
chkkey $r15, #32
jmpp ^SCROLL_LEFT, #1
chkkey $r15, #16
jmpp ^SCROLL_RIGHT, #1
chkkey $r15, #64
jmpp ^SCROLL_UP, #1
chkkey $r15, #128
jmpp ^SCROLL_DOWN, #1
jump ^RENDER_LOOP
halt
^SCROLL_LEFT SET $R31,#0
SET $R30,#128
ABS SCROLL_SPEED, SCROLL_SPEED
MUL SCROLL_SPEED, SCROLL_SPEED, #-1
JUMP ^SCROLL_SCENE, #1
JMPBK
^SCROLL_RIGHT SET $R31,#0
SET $R30,#128
ABS SCROLL_SPEED, SCROLL_SPEED
JUMP ^SCROLL_SCENE, #1
JMPBK
^SCROLL_UP SET $R31,#1
SET $R30,#96
ABS SCROLL_SPEED, SCROLL_SPEED
MUL SCROLL_SPEED, SCROLL_SPEED, #-1
JUMP ^SCROLL_SCENE, #1
JMPBK
^SCROLL_DOWN SET $R31,#1
SET $R30,#96
ABS SCROLL_SPEED, SCROLL_SPEED
JUMP ^SCROLL_SCENE, #1
JMPBK
^SCROLL_SCENE SET $R29, #0
LOOPTO #0, $R29, $R30, #1
IFGT $R31, #0, ^_SCROLL_SCENE_Y
ADD $BGX0, $BGX0, SCROLL_SPEED
JUMP ^_SCROLL_DRAW
^_SCROLL_SCENE_Y ADD $BGY0, $BGY0, SCROLL_SPEED
^_SCROLL_DRAW JUMP ^DRAW_SCENE, #1
LOOPBACK #0
print "done scroll\n"
jump ^RENDER_LOOP
^DRAW_SCENE DRWBG #0,#0
FLIP #0
VSYNC
JMPBK
SCROLL_SPEED DATA #2
HALT
